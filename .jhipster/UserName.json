{
  "changelogDate": "20220121133436",
  "clientRootFolder": "PruebaMicroservicio",
  "databaseType": "sql",
  "dto": "no",
  "fields": [
    {
      "fieldName": "email",
      "fieldType": "String",
      "fieldValidateRules": ["required", "unique", "pattern"],
      "fieldValidateRulesPattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$"
    },
    {
      "fieldName": "nick",
      "fieldType": "String",
      "fieldValidateRules": ["required", "unique"],
      "fieldValidateRulesMaxlength": "30",
      "fieldValidateRulesMinlength": "3"
    },
    {
      "fieldName": "password",
      "fieldType": "String",
      "fieldValidateRules": ["required", "minlength", "maxlength"],
      "fieldValidateRulesMaxlength": "16",
      "fieldValidateRulesMinlength": "8"
    },
    {
      "fieldName": "name",
      "fieldType": "String",
      "fieldValidateRules": ["required", "minlength", "maxlength"],
      "fieldValidateRulesMaxlength": "50",
      "fieldValidateRulesMinlength": "3"
    },
    {
      "fieldName": "surname",
      "fieldType": "String",
      "fieldValidateRules": ["required", "minlength", "maxlength"],
      "fieldValidateRulesMaxlength": "50",
      "fieldValidateRulesMinlength": "3"
    },
    {
      "fieldName": "photo",
      "fieldType": "byte[]",
      "fieldTypeBlobContent": "image"
    },
    {
      "fieldName": "phone",
      "fieldType": "String",
      "fieldValidateRules": ["minlength", "maxlength"],
      "fieldValidateRulesMaxlength": "50",
      "fieldValidateRulesMinlength": "6"
    },
    {
      "fieldName": "premium",
      "fieldType": "Boolean",
      "fieldValidateRules": ["required"]
    },
    {
      "fieldName": "birthDate",
      "fieldType": "LocalDate"
    },
    {
      "fieldName": "addDate",
      "fieldType": "LocalDate"
    },
    {
      "fieldName": "token",
      "fieldType": "String",
      "fieldValidateRules": []
    }
  ],
  "jpaMetamodelFiltering": true,
  "microserviceName": "PruebaMicroservicio",
  "name": "UserName",
  "pagination": "pagination",
  "readOnly": false,
  "relationships": [
    {
      "otherEntityName": "group",
      "otherEntityRelationshipName": "userName",
      "ownerSide": false,
      "relationshipName": "group",
      "relationshipType": "many-to-many"
    }
  ],
  "service": "serviceImpl"
}
